#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import re
import subprocess


def has_internet():
    try:
        with open("/tmp/has_internet", "r") as f:
            return f.read().strip() == "yes"
    except Exception:
        return False


TRANSLATIONS = {
    "fr": {
        "banner": "Bienvenue sur «<em>{{ hotspot_name }}</em>» "
        '(<a href="http://{{ fqdn }}/">{{ fqdn }}</a>)',
        "title": "<em>{{ project_name }}</em> est une ressource de "
        "contenus libres d'accès.",
        "reminder": "Merci de vous rappeler des points suivants :",
        "access": "L'accès à ces contenus ne se fait "
        "<strong>qu'à travers <em>http://{{ fqdn }}/</em></strong>. "
        "<u>Souvenez-vous en !</u>",
        "internet": "Cette ressource peut fournir un accès à Internet. "
        "Dans ce cas, il faudra vous <em>identifier</em> pour y accèder.",
        "prompt": "Cette page vous sera alors présenté <strong>après 15mn</strong> "
        "d'inactivité.",
        "https": "Surfant sur un site sécurisé, le navigateur pourrait vous afficher "
        "un <em>avertissement de sécurité</em> au lieu d'afficher cette page. "
        "Ouvrez-en simplement une nouvelle "
        "sur un site non-sécurisé et identifiez-vous à nouveau.",
        "go_button": "Aller à {{ fqdn }}",
        "internet_button": "M'identifier et accèder à Internet",
    },
    "en": {
        "banner": "Entering “<em>{{ hotspot_name }}</em>” "
        '(<a href="http://{{ fqdn }}/">{{ fqdn }}</a>)',
        "title": "<em>{{ project_name }}</em> is a free-to-use, content-enabled box.",
        "reminder": "Please, keep the following in mind:",
        "access": "Access to this box's content is done "
        "<strong>solely via <em>http://{{ fqdn }}/</em></strong>. "
        "<u>Remember-it !</u>",
        "internet": "This box may also provide access to Internet. "
        "You need to <em>log-in</em> to the network to access it.",
        "prompt": "You will then be prompted with this page <strong>after "
        "every 15mn</strong> of inactivity.",
        "https": "When browsing a secure website, your browser might display "
        "a <em>Security Warning</em> instead of displaying this page. "
        "Just open a new page onto a non-secure website to log-in again.",
        "go_button": "Go to {{ fqdn }}",
        "internet_button": "Log me in and access Internet",
    },
}

header = """<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
        <title>{{ hotspot_name }}</title>
        <link rel="icon" href="/hotspot-static/branding/favicon.png">
        <link rel="stylesheet" href="/hotspot-static/font-awesome/css/font-awesome.min.css" />
        <!--[if lte IE 8]>
            <link rel="stylesheet" type="text/css" href="/hotspot-static/purecss/pure-css-grids-old-ie-min.css">
        <![endif]-->
        <!--[if gt IE 8]><!-->
            <link rel="stylesheet" type="text/css" href="/hotspot-static/purecss/pure-css-grids-min.css">
        <!--<![endif]-->
        <link rel="stylesheet" type="text/css" href="/hotspot-static/main.css" />
        <link rel="stylesheet" type="text/css" href="/hotspot-static/branding/style.css" />
    </head>"""

parta = """
    <body class="">
        <header>
            <section>
              <a href="/">
                <h1>
                  <img src="/hotspot-static/branding/logo.png"></img>
                </h1>
              </a>
              <span class="boxid">{{ project_name }}!</span>
            </section>
        </header>
        <ul class="messages">
<li class="success">{banner}</li>
        </ul>
        <div class="content">
            <h2>{title}</h2>
            <p style="text-decoration: underline;">{reminder}</p>
            <ul><li>{access}</li>"""

partb = """<li>{internet}</li><li>{prompt}</li>"""

partc = """<li>{https}</li></ul>
            <p><a class="button" href="http://{{ fqdn }}">{go_button}</a>"""

partd = """ <a class="button neutral" href="/register">{internet_button}</a>"""

parte = """</p></div>"""

footer = """
        <footer>
            <div class="row">
                <div class="col third i18n_switch"></div>
                <div class="col half"></div>
            </div>
        </footer>
    </body>
</html>"""


def get_translation_for(accept_lang_header, default="en"):
    chosen_lang = default
    langs = [
        lang_item.replace("_", "-").split("-")[0].lower()
        for lang_code in accept_lang_header.split(",")
        for lang_item in lang_code.split(";")
        if "q=" not in lang_item
    ]

    for lang in langs:
        if lang in TRANSLATIONS.keys():
            chosen_lang = lang
            break

    return TRANSLATIONS.get(chosen_lang, default)


def allow_host(ipaddress):
    passlist_ps = subprocess.run(
        ["/usr/bin/sudo", "/usr/sbin/iptables", "-t", "nat", "-nL", "CAPTIVE_PASSLIST"],
        capture_output=True,
        text=True,
    )
    passlist = [
        re.split(r"\s+", line)[3]
        for line in passlist_ps.stdout.split("\n")
        if "--" in line
    ]
    if ipaddress in passlist:
        return
    subprocess.run(
        [
            "/usr/bin/sudo",
            "/usr/sbin/iptables",
            "-t",
            "nat",
            "-I",
            "CAPTIVE_PASSLIST",
            "1",
            "-s",
            str(ipaddress),
            "-j",
            "ACCEPT",
        ]
    )


def application(env, start_response):
    if env["REQUEST_URI"] == "/register":
        allow_host(env["REMOTE_ADDR"])
        start_response("302 Found", [("Location", "http://wikipedia.org")])
        return ["1"]

    start_response("200 OK", [("Content-Type", "text/html")])
    translation = get_translation_for(env.get("HTTP_ACCEPT_LANGUAGE"))
    if has_internet():
        parts = [parta, partb, partc, partd, parte]
    else:
        parts = [parta, partc, parte]
    page = header + "\n".join([part.format(**translation) for part in parts]) + footer

    return [page.encode("utf-8")]
